name: build
on:
  push:
    branches: master

jobs:
  # ベースライン
  # build_no_cache:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Build
  #       run: docker build .

  # BuildKitのみ
  # build_no_cache_buildkit:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Build
  #       env:
  #         DOCKER_BUILDKIT: 1
  #       run: docker build .

  # build_with_docker_save_load:
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@master
  #   - id: cache-docker
  #     uses: actions/cache@v1
  #     with:
  #       path: /tmp/docker-save
  #       key: docker-save-${{ hashFiles('Dockerfile') }}
  #   - run: docker load -i /tmp/docker-save/snapshot.tar || true
  #     if: steps.cache-docker.outputs.cache-hit == 'true'
  #   - run: docker build . -t thing --cache-from=thing-cache
  #   - run: docker tag thing thing-cache && mkdir -p /tmp/docker-save && docker save thing-cache -o /tmp/docker-save/snapshot.tar && ls -lh /tmp/docker-save || true
  #     if: always() && steps.cache-docker.outputs.cache-hit != 'true'

  build_with_local_registry:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - id: cache-docker
        uses: actions/cache@v1
        with:
          path: /tmp/docker-registry
          key: docker-registry-no-buildkit-${{ hashFiles('Dockerfile') }}
      - run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
      - run: docker pull localhost:5000/thing || true
      - run: docker build . -t thing --cache-from=localhost:5000/thing
      - run: docker tag thing localhost:5000/thing && docker push localhost:5000/thing || true
        if: steps.cache.outputs.cache-hit != 'true'

  # build_with_local_registry_buildkit:
  #   env:
  #     DOCKER_BUILDKIT: '1'
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@master
  #     - id: cache-docker
  #       uses: actions/cache@v1
  #       with:
  #         path: /tmp/docker-registry
  #         key: docker-registry-buildkit-${{ hashFiles('Dockerfile') }}
  #     - run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
  #     - run: docker build . -t thing --cache-from=localhost:5000/thing --build-arg BUILDKIT_INLINE_CACHE=1
  #     - run: docker tag thing localhost:5000/thing && docker push localhost:5000/thing || true
  #       if: steps.cache.outputs.cache-hit != 'true'

  # build_with_gpr:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@master
  #     - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
  #     - run: docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit || true
  #     - run: docker build . -t thing --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit
  #     - run: docker tag thing docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit && docker push docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache-no-buildkit || true


      # build-push-action
      # https://github.com/marketplace/actions/build-and-push-docker-images
      # - name: Build
      #   uses: docker/build-push-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: adachikun/githubactionsbuild
      #     tags: latest
      #     push: false


      # build-push-action + Buildkit
      # https://github.com/marketplace/actions/build-and-push-docker-images
      # - name: Build
      #   uses: docker/build-push-action@v1
      #   env:
      #     DOCKER_BUILDKIT: 1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: adachikun/githubactionsbuild
      #     tags: latest
      #     push: false
